.github/workflows/sign_windows.yml
.github/workflows/
name: Build and Sign Flutter Windows EXE

on:
  push:
    tags:
      - "v*"  # triggers on version tags like v1.0

jobs:
  build-and-sign:
    runs-on: windows-latest

    steps:
      # 1️⃣ Checkout your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Set up Flutter (adjust version if needed)
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.3"  # use your Flutter version

      # 3️⃣ Build Windows executable
      - name: Build Flutter Windows EXE
        run: |
          flutter pub get
          flutter build windows --release
        shell: pwsh

      # 4️⃣ Decode the certificate from GitHub Secrets
      - name: Decode certificate
        run: |
          $certBase64 = "${{ secrets.CERTIFICATE }}"
          [IO.File]::WriteAllBytes("code-signing.pfx",[System.Convert]::FromBase64String($certBase64))
        shell: pwsh

      # 5️⃣ Sign the EXE
      - name: Sign the executable
        run: |
          $exePath = "build\windows\runner\Release\YourApp.exe"  # replace with your EXE name
          $certPassword = "${{ secrets.CERT_PASSWORD }}"
          signtool sign /f code-signing.pfx /p $certPassword /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 $exePath
        shell: pwsh

      # 6️⃣ Upload signed EXE as artifact
      - name: Upload signed EXE
        uses: actions/upload-artifact@v4
        with:
          name: signed-windows-exe
          path: build/windows/runner/Release/*.exe
Add workflow for signing Windows EXE

